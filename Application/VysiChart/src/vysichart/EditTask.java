/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vysichart;

/**
 *
 * @author U AMD
 */
import java.util.ArrayList;
import java.util.Calendar;

public class EditTask extends javax.swing.JFrame {

    /**
     * Creates new form EditTask
     */
    private static GraphicalUserInterface gui;
    private int currentTab; //Used for storing the index of the selected tab.

    public EditTask(GraphicalUserInterface gui) {
        this.gui = gui;
        currentTab = gui.getCurrentTab();
        initComponents();
        updateDateBoxes();
        newName.setText(String.valueOf(taskSelector.getSelectedItem()));


    }

    private void updateDateBoxes() {
        Calendar startCal = gui.getProject().getTaskFromString(String.valueOf(taskSelector.getSelectedItem())).getStartCalendar();
        Calendar endCal = gui.getProject().getTaskFromString(String.valueOf(taskSelector.getSelectedItem())).getEndCalendar();

        int startYearIndex = startCal.get(Calendar.YEAR) - 2010;
        startYear.setSelectedIndex(startYearIndex);

        int startMonthIndex = startCal.get(Calendar.MONTH) - 1;
        startMonth.setSelectedIndex(startMonthIndex);

        int startDayIndex = startCal.get(Calendar.DAY_OF_MONTH) - 1;
        startDay.setSelectedIndex(startDayIndex);

        int startHourIndex = startCal.get(Calendar.HOUR_OF_DAY);
        startHour.setSelectedIndex(startHourIndex);

        int startMinutesIndex = startCal.get(Calendar.MINUTE) / 5;
        startMinute.setSelectedIndex(startMinutesIndex);

        int endYearIndex = endCal.get(Calendar.YEAR) - 2010;
        endYear.setSelectedIndex(endYearIndex);

        int endMonthIndex = endCal.get(Calendar.MONTH) - 1;
        endMonth.setSelectedIndex(endMonthIndex);

        int endDayIndex = endCal.get(Calendar.DAY_OF_MONTH) - 1;
        endDay.setSelectedIndex(endDayIndex);

        int endHourIndex = endCal.get(Calendar.HOUR_OF_DAY);
        endHour.setSelectedIndex(endHourIndex);

        int endMinutesIndex = endCal.get(Calendar.MINUTE) / 5;
        endMinute.setSelectedIndex(endMinutesIndex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        lblTask = new javax.swing.JLabel();
        taskSelector = new javax.swing.JComboBox();
        editTask = new javax.swing.JButton();
        delTask = new javax.swing.JButton();
        newParent = new javax.swing.JComboBox();
        lblParent = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        newName = new javax.swing.JTextField();
        lblStartDate = new javax.swing.JLabel();
        lblEndDate = new javax.swing.JLabel();
        startDay = new javax.swing.JComboBox();
        endDay = new javax.swing.JComboBox();
        startMonth = new javax.swing.JComboBox();
        endMonth = new javax.swing.JComboBox();
        startYear = new javax.swing.JComboBox();
        endYear = new javax.swing.JComboBox();
        startMinute = new javax.swing.JComboBox();
        endMinute = new javax.swing.JComboBox();
        startHour = new javax.swing.JComboBox();
        endHour = new javax.swing.JComboBox();
        lblDates = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VysiChart - Edit Task");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        title.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Edit Task");

        lblTask.setText("Select Task To Edit:");

        taskSelector.setModel(new javax.swing.DefaultComboBoxModel(gui.getProject().getTasksAsStringArray()));
        taskSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskSelectorActionPerformed(evt);
            }
        });

        editTask.setText("Edit");
        editTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTaskActionPerformed(evt);
            }
        });

        delTask.setBackground(new java.awt.Color(255, 0, 51));
        delTask.setText("Delete");
        delTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delTaskActionPerformed(evt);
            }
        });

        newParent.setModel(new javax.swing.DefaultComboBoxModel(gui.getProject().getTasksAsStringArray("Don't Change Parent")));

        lblParent.setText("Edit Task Parent:");

        lblName.setText("Edit Task Name:");

        newName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newNameMouseClicked(evt);
            }
        });
        newName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNameActionPerformed(evt);
            }
        });

        lblStartDate.setText("Edit Start Date:");

        lblEndDate.setText("Edit End Date:");

        startDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        endDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        startMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        endMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        startYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014" }));

        endYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014" }));

        startMinute.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55" }));

        endMinute.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55" }));

        startHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));

        endHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));

        lblDates.setText("Dates (MM HH DD MM YYYY)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTask)
                            .addComponent(lblParent)
                            .addComponent(lblName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newParent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(taskSelector, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newName)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 214, Short.MAX_VALUE)
                        .addComponent(delTask, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editTask, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStartDate)
                            .addComponent(lblEndDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startMinute, 0, 45, Short.MAX_VALUE)
                            .addComponent(endMinute, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startHour, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(endHour, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startDay, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(endDay, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startMonth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(endMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startYear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(endYear, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDates)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTask)
                    .addComponent(taskSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(lblDates)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblParent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStartDate)
                            .addComponent(startYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEndDate)
                            .addComponent(endYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(startHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(startMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delTask)
                    .addComponent(editTask))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newNameMouseClicked
        // remove message
        newName.setText("");
    }//GEN-LAST:event_newNameMouseClicked

    private void delTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delTaskActionPerformed
        // Delete current task

        // get task from index
        int index = taskSelector.getSelectedIndex();
        Task taskToDelete = gui.getProject().getTasks().get(index);
        gui.getProject().deleteTask(taskToDelete);
        gui.refresh(); // FRESHEN UP
        gui.setTab(currentTab); //offsets the action of refresh and selects
        //the currently selected tab.

        this.dispose();
    }//GEN-LAST:event_delTaskActionPerformed

    private void editTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTaskActionPerformed
        // Edit the tasks

        int index = taskSelector.getSelectedIndex();
        Task taskToEdit = gui.getProject().getTasks().get(index);

        String newTaskName = newName.getText(); // if newTaskName = "" or default message then no nothing

        // get changed parent
        index = newParent.getSelectedIndex();  // get new parent, if index = 0 then no new parent


        // only if a valid date in enetred will this work
        Calendar newStart = Calendar.getInstance();
        newStart.set(Integer.parseInt(String.valueOf(startYear.getSelectedItem())), Integer.parseInt(String.valueOf(startMonth.getSelectedItem())), Integer.parseInt(String.valueOf(startDay.getSelectedItem())), Integer.parseInt(String.valueOf(startHour.getSelectedItem())), Integer.parseInt(String.valueOf(startMinute.getSelectedItem())));

        taskToEdit.setStartCalendar(newStart); // update calendar




        Calendar newEnd = Calendar.getInstance();
        newEnd.set(Integer.parseInt(String.valueOf(endYear.getSelectedItem())), Integer.parseInt(String.valueOf(endMonth.getSelectedItem())), Integer.parseInt(String.valueOf(endDay.getSelectedItem())), Integer.parseInt(String.valueOf(endHour.getSelectedItem())), Integer.parseInt(String.valueOf(endMinute.getSelectedItem())));

        taskToEdit.setEndCalendar(newEnd); // update end calendar


        if (newTaskName.equals("") == false && newTaskName.equals("blank = no edit") == false) {
            taskToEdit.setTaskName(newTaskName); // set new name
        }

        // now to set new parent, the hard bit
        if (index != 0) { // 0 is don't change
            // when changing parent, we need to de-refrerence the old parent

            gui.getProject().removeFromParent(taskToEdit);


            Task newTaskParent = gui.getProject().getTasks().get(index - 1); // cause of the extra index
            taskToEdit.setTaskParent(newTaskParent); // set new parent

        }



        gui.refresh(); // FRESHEN UP
        gui.setTab(currentTab); //offsets the action of refresh and selects
        //the currently selected tab.

        this.dispose();





    }//GEN-LAST:event_editTaskActionPerformed

    private void newNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newNameActionPerformed

    private void taskSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskSelectorActionPerformed
        // Update all info boxes

        updateDateBoxes();
        newName.setText(String.valueOf(taskSelector.getSelectedItem()));
    }//GEN-LAST:event_taskSelectorActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (newName.getText().equals("")) {
            newName.setText(String.valueOf(taskSelector.getSelectedItem()));
        }
        
    }//GEN-LAST:event_formMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditTask(gui).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delTask;
    private javax.swing.JButton editTask;
    private javax.swing.JComboBox endDay;
    private javax.swing.JComboBox endHour;
    private javax.swing.JComboBox endMinute;
    private javax.swing.JComboBox endMonth;
    private javax.swing.JComboBox endYear;
    private javax.swing.JLabel lblDates;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblParent;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTask;
    private javax.swing.JTextField newName;
    private javax.swing.JComboBox newParent;
    private javax.swing.JComboBox startDay;
    private javax.swing.JComboBox startHour;
    private javax.swing.JComboBox startMinute;
    private javax.swing.JComboBox startMonth;
    private javax.swing.JComboBox startYear;
    private javax.swing.JComboBox taskSelector;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
